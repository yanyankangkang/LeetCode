import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.util.Scanner;

public class solution {
	
	public static void addComma(String in, String out) throws Exception{
		File inputFile = new File(in);
		System.out.println(inputFile);
		File outputFile = new File(out);
		Scanner Reader = new Scanner(inputFile);
		FileWriter write = new FileWriter(outputFile);
		write.write(Reader.nextLine() + "\n");
		int c =  1;
		while(Reader.hasNext()){
			c++;
			String s = Reader.nextLine();
			String word = "";
			int count = 0;
			for (int i = 0; i < s.length(); i++){
				if (s.charAt(i) != ' ' && s.charAt(i) != '+'){
					word += s.charAt(i);
				}
				else if(word.length() > 0){			
					count++;
				if (count == 3){
					write.write(word + "\n");
					break;
				}
				else{
					write.write(word + ",	     ");
				}
				word = "";
				}	
			}
		}
		System.out.println(c);
	}
	static double T_check(double u, double sigma, double k){
		return u / (1 / k + 1 / 9 ) / sigma;
	}
	static double entropy(double p){
		
		return -p * (Math.log10(p) / Math.log(2)) - (1 - p) * (Math.log10(1-p) / Math.log(2)); 
	}
	public static void main(String[] Args) throws Exception{
			//System.out.println(entropy(0.2));
			//addComma("/Users/mac/Documents/workspace/Leetcode/ML_helper/src/5.txt","/Users/mac/Documents/workspace/Leetcode/ML_helper/src/55.txt");
			System.out.println(T_check(4.43, 4.04, 474433));
	}
}
